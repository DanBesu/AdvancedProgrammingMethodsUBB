
 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(int) v;
    new(v, 20 ); Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {-}
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(int) v;
    new(v, 20 ); Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {-}
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 20 ); Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 20 ); Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 20 );
    Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 20 );
    Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(Ref(int)) a; new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(Ref(int)) a;
    new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    Ref(Ref(int)) a;
    new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (0, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(a, v); new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (0, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(a, v);
    new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (0, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(a, v);
    new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (0, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 30 ); print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 30 );
    print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    new(v, 30 );
    print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (1, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (3, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
    3 -> 30 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {
    print(read(read(a)));
}
Symbols table: {
    a -> (2, Ref(int))
    v -> (3, int)
 }
Out list: []
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
    3 -> 30 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {}
Symbols table: {
    a -> (2, Ref(int))
    v -> (3, int)
 }
Out list: [ 20 ]
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
    3 -> 30 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {}
Symbols table: {
    a -> (2, Ref(int))
    v -> (3, int)
 }
Out list: [ 20 ]
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
    3 -> 30 
 }

 >>>.................................................................>>> Program state: 
Thread ID:6
Execution stack: {}
Symbols table: {
    a -> (2, Ref(int))
    v -> (3, int)
 }
Out list: [ 20 ]
File table: {-}
Heap: {
    1 -> 20 
    2 -> (1, int)
    3 -> 30 
 }
