
 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) a;
    Ref(int) b; int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {-}
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) a;
    Ref(int) b; int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {-}
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) b; int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) b; int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) b;
    int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    Ref(int) b;
    int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    int v; new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    int v;
    new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    int v;
    new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(a, 0 ); new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(a, 0 );
    new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(a, 0 );
    new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (0, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {-}

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(b, 0 ); (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(b, 0 );
    (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    new(b, 0 );
    (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (0, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (a) = 1 ;; (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (a) = 1 ;;
    (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (a) = 1 ;;
    (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 0 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (b) = 2 ;; v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (b) = 2 ;;
    v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    (b) = 2 ;;
    v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 0 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(a) < read(b) ? 100  : 200 ; print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(a) < read(b) ? 100  : 200 ;
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(a) < read(b) ? 100  : 200 ;
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    IF(read(a) < read(b)) THEN(v = 100 ) ELSE(v = 200 ));
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    IF(read(a) < read(b)) THEN(v = 100 ) ELSE(v = 200 ));
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = 100 ;
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = 100 ;
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 0 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v); v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v);
    v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v);
    v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: []
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(b) - 2  > read(a) ? 100  : 200 ; print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(b) - 2  > read(a) ? 100  : 200 ;
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = read(b) - 2  > read(a) ? 100  : 200 ;
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    IF(read(b) - 2  > read(a)) THEN(v = 100 ) ELSE(v = 200 ));
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    IF(read(b) - 2  > read(a)) THEN(v = 100 ) ELSE(v = 200 ));
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = 200 ;
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    v = 200 ;
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 100 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 200 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {
    print(v);
}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 200 
 }
Out list: [ 100 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 200 
 }
Out list: [ 100 , 200 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 200 
 }
Out list: [ 100 , 200 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }

 >>>.................................................................>>> Program state: 
Thread ID:11
Execution stack: {}
Symbols table: {
    a -> (1, int)
    b -> (2, int)
    v -> 200 
 }
Out list: [ 100 , 200 ]
File table: {-}
Heap: {
    1 -> 1 
    2 -> 2 
 }
